# Generated by Django 3.2.23 on 2023-12-08 09:22

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50)),
                ('code', models.CharField(default='', max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today)),
            ],
            options={
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='Depreciation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('depreciation', models.BooleanField()),
                ('brand', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=3, max_digits=15)),
                ('purchase_month', models.DateField()),
                ('detail', models.CharField(max_length=500)),
                ('notes', models.CharField(max_length=500)),
                ('date_created', models.DateField(default=datetime.date.today)),
                ('accountID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.account')),
            ],
            options={
                'db_table': 'depreciation',
            },
        ),
        migrations.CreateModel(
            name='DepreciationLevel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=20)),
                ('date_created', models.DateField(default=datetime.date.today)),
            ],
            options={
                'db_table': 'depreciation_level',
            },
        ),
        migrations.CreateModel(
            name='DepreciationYear',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('level2ID', models.CharField(default='', max_length=2)),
                ('name', models.CharField(default='', max_length=20)),
                ('yearly_rate', models.DecimalField(decimal_places=0, default=0, max_digits=15)),
                ('closed', models.BooleanField()),
            ],
            options={
                'db_table': 'depreciation-year',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default=datetime.date.today)),
                ('note', models.CharField(blank=True, default='', max_length=150)),
                ('date_created', models.DateField(default=datetime.date.today)),
                ('user_created', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('avg_price', models.DecimalField(decimal_places=3, default=0, max_digits=15)),
                ('detail', models.CharField(max_length=500)),
                ('notes', models.CharField(max_length=500)),
                ('date_created', models.DateField(default=datetime.date.today)),
                ('accountID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.account')),
            ],
            options={
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('person_role', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('company', models.CharField(max_length=50)),
                ('accupation', models.CharField(max_length=50)),
                ('mobile1', models.CharField(max_length=20)),
                ('mobile2', models.CharField(default='', max_length=20)),
                ('address', models.CharField(max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today)),
                ('user_created', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'person',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default=datetime.date.today)),
                ('credit', models.DecimalField(decimal_places=0, max_digits=15)),
                ('debit', models.DecimalField(decimal_places=0, max_digits=15)),
                ('note', models.CharField(default='', max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today)),
                ('accountID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('customerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.person')),
                ('docID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.document')),
                ('user_created', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today)),
                ('user_created', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'measure',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customerID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.person')),
                ('docID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.document')),
                ('inventoryID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.inventory')),
            ],
            options={
                'db_table': 'inventory-transaction',
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='customerID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.person'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='measureID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.measure'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='user_created',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DepreciationProgress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.CharField(default='', max_length=4)),
                ('depreciation_amount', models.DecimalField(decimal_places=0, default=0, max_digits=15)),
                ('depreciation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.depreciation')),
            ],
            options={
                'db_table': 'depreciation-progress',
            },
        ),
        migrations.AddField(
            model_name='depreciation',
            name='levelID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.depreciationlevel'),
        ),
        migrations.AddField(
            model_name='depreciation',
            name='user_created',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AccountLevel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today)),
                ('parent', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='api.accountlevel')),
            ],
            options={
                'db_table': 'account_level',
            },
        ),
        migrations.AddField(
            model_name='account',
            name='levelID',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='api.accountlevel'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_created',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together={('levelID', 'code')},
        ),
    ]
